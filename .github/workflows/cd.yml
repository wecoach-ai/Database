name: Push

on:
  push:
    branches:
      - main

jobs:
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: sh
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.1
      - name: Install dependencies
        run: go mod tidy
      - name: Run Unit Tests
        run: go test -v --covermode atomic --coverpkg github.com/wecoach-ai/AuthService/internal/app --coverprofile ./dist/unit.profile.out internal/app_test/unit/*
        env:
          DB_CONNECTION_URI: ${{ secrets.CI_TEST_DB_CONNECTION_URI }}
          DB_BACKEND: ${{ vars.CI_TEST_DB_BACKEND }}
          ENVIRONMENT: ${{ vars.CI_TEST_ENVIRONMENT }}
          ACCESS_TOKEN_SIGNING_KEY: ${{ secrets.CI_TEST_ACCESS_TOKEN_SIGNING_KEY }}
          REFRESH_TOKEN_SIGNING_KEY: ${{ secrets.CI_TEST_REFRESH_TOKEN_SIGNING_KEY }}
      - name: Upload unit test coverage to Codecov
        uses: codecov/codecov-action@v4.4.0
        with:
          files: dist/unit.profile.out
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          codecov_yml_path: ./.github/codecov.yml
          slug: wecoach-ai/AuthService
      # - name: Run Integration Tests
      #   run: go test -v --covermode atomic --coverpkg github.com/wecoach-ai/ExerciseService/internal/app --coverprofile ./dist/integration.profile.out internal/app_test/integration/*
      #   env:
      #     DB_CONNECTION_URI: ${{ secrets.CI_TEST_DB_CONNECTION_URI }}
      #     DB_BACKEND: ${{ secrets.CI_TEST_DB_BACKEND }}
      #     ENVIRONMENT: ${{ secrets.CI_TEST_ENVIRONMENT }}
      # - name: Upload integration test coverage to Codecov
      #   uses: codecov/codecov-action@v4.4.0
      #   with:
      #     files: dist/integration.profile.out
      #     flags: integrationtests
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     verbose: true
      #     codecov_yml_path: ./.github/codecov.yml
      #     slug: wecoach-ai/PlanService
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - coverage
    defaults:
      run:
        shell: sh
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Login to Amazon ECR
        uses: docker/login-action@v3
        with:
          ecr: true
          logout: true
          registry: 976750617193.dkr.ecr.ap-south-1.amazonaws.com
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: 976750617193.dkr.ecr.ap-south-1.amazonaws.com/auth-service
          tags: type=sha
      - name: Build
        run: docker image build --file build/Dockerfile --tag ${{ steps.meta.outputs.tags }} .
      - name: Push
        run: docker image push ${{ steps.meta.outputs.tags }}
      - name: Redeploy Lambda
        run: aws lambda update-function-code --function-name AuthService --image-uri ${{ steps.meta.outputs.tags }}
